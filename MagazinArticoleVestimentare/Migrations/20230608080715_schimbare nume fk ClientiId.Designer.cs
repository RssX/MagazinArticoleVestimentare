// <auto-generated />
using MagazinArticoleVestimentare.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MagazinArticoleVestimentare.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230608080715_schimbare nume fk ClientiId")]
    partial class schimbarenumefkClientiId
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MagazinArticoleVestimentare.Models.Clienti", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"));

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tara")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientId");

                    b.ToTable("Clienti");
                });

            modelBuilder.Entity("MagazinArticoleVestimentare.Models.Comanda", b =>
                {
                    b.Property<int>("ComandaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComandaId"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("DataComenzii")
                        .HasColumnType("int");

                    b.HasKey("ComandaId");

                    b.HasIndex("ClientId");

                    b.ToTable("Comanda");
                });

            modelBuilder.Entity("MagazinArticoleVestimentare.Models.ProdusComandat", b =>
                {
                    b.Property<int>("ProdusId")
                        .HasColumnType("int");

                    b.Property<int>("ComandaId")
                        .HasColumnType("int");

                    b.Property<int>("CantitateComandata")
                        .HasColumnType("int");

                    b.HasKey("ProdusId", "ComandaId");

                    b.HasIndex("ComandaId");

                    b.ToTable("ProdusComandat");
                });

            modelBuilder.Entity("MagazinArticoleVestimentare.Models.Produse", b =>
                {
                    b.Property<int>("ProdusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProdusId"));

                    b.Property<int>("CantitateInStoc")
                        .HasColumnType("int");

                    b.Property<int>("CategorieProdus")
                        .HasColumnType("int");

                    b.Property<string>("ImagineProdusUrle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Pret")
                        .HasColumnType("float");

                    b.HasKey("ProdusId");

                    b.ToTable("Produse");
                });

            modelBuilder.Entity("MagazinArticoleVestimentare.Models.Comanda", b =>
                {
                    b.HasOne("MagazinArticoleVestimentare.Models.Clienti", "Clienti")
                        .WithMany("Comenzi")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clienti");
                });

            modelBuilder.Entity("MagazinArticoleVestimentare.Models.ProdusComandat", b =>
                {
                    b.HasOne("MagazinArticoleVestimentare.Models.Comanda", "Comanda")
                        .WithMany("ProdusComandat")
                        .HasForeignKey("ComandaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MagazinArticoleVestimentare.Models.Produse", "Produse")
                        .WithMany("ProdusComandat")
                        .HasForeignKey("ProdusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comanda");

                    b.Navigation("Produse");
                });

            modelBuilder.Entity("MagazinArticoleVestimentare.Models.Clienti", b =>
                {
                    b.Navigation("Comenzi");
                });

            modelBuilder.Entity("MagazinArticoleVestimentare.Models.Comanda", b =>
                {
                    b.Navigation("ProdusComandat");
                });

            modelBuilder.Entity("MagazinArticoleVestimentare.Models.Produse", b =>
                {
                    b.Navigation("ProdusComandat");
                });
#pragma warning restore 612, 618
        }
    }
}
